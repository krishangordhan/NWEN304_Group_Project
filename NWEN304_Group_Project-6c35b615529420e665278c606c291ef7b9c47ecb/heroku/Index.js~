var express = require('express');
var bodyParser = require('body-parser');
var app = express();
var port = process.env.PORT;

var pg = require('pg').native;

var connectionString  = process.env.DATABASE_URL;

var query;



app.use(bodyParser.json());

// Add headers
app.use(function (req, res, next) {
 // Website you wish to allow to connect
 res.setHeader('Access-Control-Allow-Origin', '*')
 // // Request methods you wish to allow
 res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');
 // Request headers you wish to allow ,
 res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Access-Control-AllowHeaders');
 // Pass to next layer of middleware
 next();
});

//app.get('/', function (req, res) {
// res.send('Hello World!');
//});

app.post('/newTodo', function (req, res) {
	
	var client = new pg.Client(connectionString);	
	
	client.connect(function(err){
		if(err) {
			
			return console.error("error in /newtodo connect", err);}
	});
	
	query = client.query("INSERT INTO todo(task,completed) VALUES($1,$2)", [req.body.name,"No"],
		function(err){
		if(err){
			
			return console.error("error in /newtodo query", err);}
	});
	
	query.on('end',function () {
		client.end(function(err){
		if(err){
			
			return console.error("error in /newtodo end", err);}
	});
	});
	
		
});
	
app.post('/complete', function(req, res){
	var task = req.body.name;
	var client = new pg.Client(connectionString);
	
	client.connect(function(err){
		if(err){
			
			return console.error("error in complete connect", err);
			}
	});
	
	query = client.query("SELECT * FROM todo WHERE task = $1 and completed = $2", [task,"No"],function(err){
		if(err){
			
			return console.error("error in complete query", err);}
	});
	var results = [];
	
	query.on('row', function(row){
		results.push(row.id);
		
	});
	
	query.on('end',function () {
		
		 query2 = client.query("UPDATE todo SET completed = $1 WHERE id = $2", ["Yes", results[0]], function(err){
		 	if(err){
		 		return console.error("error in complete query2", err);
		 	}
		 });
		 
		 query2.on('end', function () {
		 	client.end(function(err){
		 		if(err){
		 		console.error("error in complete query2 end", err);
		 	}
		 	});
		 });
	
	});
	
});





app.post('/edit', function(req, res){
	var task = req.body.oldTask;
	var newTask = req.body.newTask
	var client = new pg.Client(connectionString);
	
	client.connect(function(err){
		if(err){
			
			return console.error("error in edit connect", err);
			}
	});
	
	query = client.query("SELECT * FROM todo WHERE task = $1 and completed = $2", [task,"No"],function(err){
		if(err){
			
			return console.error("error in edit query", err);}
	});
	var results = [];
	
	query.on('row', function(row){
		results.push(row.id);
		
	});
	
	query.on('end',function () {
		
		 query2 = client.query("UPDATE todo SET task = $1 WHERE id = $2", [newTask, results[0]], function(err){
		 	if(err){
		 		return console.error("error in edit query2", err);
		 	}
		 });
		 
		 query2.on('end', function () {
		 	client.end(function(err){
		 		if(err){
		 		console.error("error in edit query2 end", err);
		 	}
		 	});
		 });
	
	});
	
});
	
app.get('/todoList', function(req,res) {
	
	var client = new pg.Client(connectionString);
	
	client.connect(function(err){
		if(err){
			
			return console.error("error in getTodoList connect", err);
			}
	});
	
	query = client.query("SELECT * FROM todo WHERE completed = $1 ORDER BY id", ["No"],function(err){
		if(err){
			
			return console.error("error in getTodoList query", err);}
	});
	var results = [];
	
	query.on('row', function(row){
		results.push(row.task);
		
	});
	
	query.on('end',function () {
		client.end(function(err){
			
		if(err){return console.error("error in getTodoList end", err);}
		var list = JSON.stringify(results);
		res.send(list);
	});
	});
	
});

app.get('/completedList', function (req, res) {
	
	var client = new pg.Client(connectionString);
	
	client.connect(function(err){
		if(err){
			
			return console.error("error in getcompletedList connect", err);
			}
	});
	
	query = client.query("SELECT * FROM todo WHERE completed = $1 ", ["Yes"],function(err){
		if(err){
			
			return console.error("error in getCompletedList query", err);}
	});
	var results = [];
	
	query.on('row', function(row){
		results.push(row.task);
		
	});
	
	query.on('end',function () {
		client.end(function(err){
			
		if(err){return console.error("error in getCompletedList end", err);}
		var list = JSON.stringify(results);
		res.send(list);
	});
	});
	
	
});

app.delete('/del', function(req, res){
	var list = req.body.list;
	if(list === "todo"){list = "No";}
	else if(list === "complete"){list = "Yes";}
	var task = req.body.name;
	var client = new pg.Client(connectionString);
	
	client.connect(function(err){
		if(err){
			
			return console.error("error in delete connect", err);
			}
	});
	
	query = client.query("SELECT * FROM todo WHERE task = $1 and completed = $2", [task, list],function(err){
		if(err){
			
			return console.error("error in delete query", err);}
	});
	var results = [];
	
	query.on('row', function(row){
		results.push(row.id);
		
	});
	
	query.on('end',function () {
		
		 query2 = client.query("DELETE FROM todo WHERE id = $1 ", [results[0]], function(err){
		 	if(err){
		 		return console.error("error in delete query2", err);
		 	}
		 });
		 
		 query2.on('end', function () {
		 	client.end(function(err){
		 		if(err){
		 		console.error("error in delete query2 end", err);
		 	}
		 	});
		 });
	
	});
	
});


app.put('/sort', function(req,res){
	var oldList = req.body.list;
	var newList;
	if(oldList === "todo-list"){
		oldList = "No";
		newList = "Yes"
		}
	else if(oldList === "completed-list"){
		oldList = "Yes";
		newList = "No";
		}
	var task = req.body.name;
	
	var client = new pg.Client(connectionString);
	
	client.connect(function(err){
		if(err){
			
			return console.error("error in sort connect", err);
			}
	});
	
	query = client.query("SELECT * FROM todo WHERE task = $1 and completed = $2 ", [task, oldList],function(err){
		if(err){
			
			return console.error("error in sort query", err);}
	});
	var results = [];
	
	query.on('row', function(row){
		results.push(row.id);
		
	});
	
	query.on('end',function () {
		
		query2 = client.query("UPDATE todo SET completed = $1 WHERE id = $2 ", [newList, results[0]], function(err){
		 	if(err){
		 		return console.error("error in sort query2", err);
		 	}
		 });
		 
		 query2.on('end', function () {
		 	client.end(function(err){
		 		if(err){
		 		console.error("error in sort query2 end", err);
		 	}
		 	});
		 });
	});
	
	
});

app.listen(port, function () {
 console.log('Example app listening on port 8080!');
});